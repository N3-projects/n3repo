<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-2.0.4.xsd"
       default-autowire="byType">
    <description>
        This is the main Spring configuration file with some of the main "core" classes defined. 
    </description>
    
    <!-- <context:component-scan base-package="com.**.service" /> -->
    
    <bean id="baseLogic" class="n3.home.base.BaseLogic" />

	<security:http auto-config="true" access-decision-manager-ref="myAccessDecisionManagerBean" access-denied-page="/403.jsp">
		<security:form-login login-page="/login.jsp" authentication-failure-url="/bottom.jsp" default-target-url="/main.jsp" always-use-default-target="true"/>
		<security:logout logout-success-url="/login.jsp" />
		<!-- 设置禁止重复登录，默认后一次登录seesion使前一个登录验证失效 -->
		<!-- <security:concurrent-session-control expired-url="/login.jsp"/> -->
	</security:http>
	
	<!-- 授权判断配置, 将授权名称的默认前缀由ROLE_ -->
	<bean id="myAccessDecisionManagerBean" class="org.springframework.security.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter">
					<property name="rolePrefix" value="ROLE_" />
				</bean>
				<bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>
	
	<!-- 认证配置 -->
	<security:authentication-provider user-service-ref="myUserDetailsService">
		<!-- 可设置hash使用sha1或md5散列密码后再存入数据库 -->
		<!-- <s:password-encoder hash="md5" /> -->
	</security:authentication-provider>
	<!-- 项目实现的用户查询服务 -->
	<bean id="myUserDetailsService" class="n3.home.security.UserDetailsServiceImpl" />
	
	<!--
		重新定义的FilterSecurityInterceptor,使用databaseDefinitionSource提供的url-授权关系定义
	-->
	<bean id="filterSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor">
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
		<property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />
		<property name="objectDefinitionSource" ref="databaseDefinitionSource" />
	</bean>

	<!-- DefinitionSource工厂,使用resourceDetailsService提供的URL-授权关系. -->
	<bean id="databaseDefinitionSource" class="n3.home.security.DefinitionSourceFactoryBean">
		<!-- <property name="resourceDetailsService" ref="resourceDetailsService" /> -->
	</bean>

	<!-- Jersey Example -->
	<bean id="greetingService" class="org.glassfish.jersey.examples.helloworld.spring.GreetingServiceImpl"/>

    <bean class="org.glassfish.jersey.examples.helloworld.spring.DateTimeService" scope="request"/>

    <bean class="org.glassfish.jersey.examples.helloworld.spring.SpringSingletonResource"/>

    <bean class="org.glassfish.jersey.examples.helloworld.spring.SpringRequestResource" scope="request"/>

    <bean class="org.glassfish.jersey.examples.helloworld.spring.CustomExceptionMapper"/>
    
    <bean class="n3.home.rest.TestService"/>
</beans>